// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cvservice.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FileLocation struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileLocation) Reset()         { *m = FileLocation{} }
func (m *FileLocation) String() string { return proto.CompactTextString(m) }
func (*FileLocation) ProtoMessage()    {}
func (*FileLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c056965df545451, []int{0}
}

func (m *FileLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLocation.Unmarshal(m, b)
}
func (m *FileLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLocation.Marshal(b, m, deterministic)
}
func (m *FileLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLocation.Merge(m, src)
}
func (m *FileLocation) XXX_Size() int {
	return xxx_messageInfo_FileLocation.Size(m)
}
func (m *FileLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLocation.DiscardUnknown(m)
}

var xxx_messageInfo_FileLocation proto.InternalMessageInfo

func (m *FileLocation) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *FileLocation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type RecognizeRequest struct {
	File                 *FileLocation `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RecognizeRequest) Reset()         { *m = RecognizeRequest{} }
func (m *RecognizeRequest) String() string { return proto.CompactTextString(m) }
func (*RecognizeRequest) ProtoMessage()    {}
func (*RecognizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c056965df545451, []int{1}
}

func (m *RecognizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognizeRequest.Unmarshal(m, b)
}
func (m *RecognizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognizeRequest.Marshal(b, m, deterministic)
}
func (m *RecognizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognizeRequest.Merge(m, src)
}
func (m *RecognizeRequest) XXX_Size() int {
	return xxx_messageInfo_RecognizeRequest.Size(m)
}
func (m *RecognizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecognizeRequest proto.InternalMessageInfo

func (m *RecognizeRequest) GetFile() *FileLocation {
	if m != nil {
		return m.File
	}
	return nil
}

type RecognizeResponse struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Files                []*FileLocation `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RecognizeResponse) Reset()         { *m = RecognizeResponse{} }
func (m *RecognizeResponse) String() string { return proto.CompactTextString(m) }
func (*RecognizeResponse) ProtoMessage()    {}
func (*RecognizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c056965df545451, []int{2}
}

func (m *RecognizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognizeResponse.Unmarshal(m, b)
}
func (m *RecognizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognizeResponse.Marshal(b, m, deterministic)
}
func (m *RecognizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognizeResponse.Merge(m, src)
}
func (m *RecognizeResponse) XXX_Size() int {
	return xxx_messageInfo_RecognizeResponse.Size(m)
}
func (m *RecognizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecognizeResponse proto.InternalMessageInfo

func (m *RecognizeResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RecognizeResponse) GetFiles() []*FileLocation {
	if m != nil {
		return m.Files
	}
	return nil
}

func init() {
	proto.RegisterType((*FileLocation)(nil), "main.FileLocation")
	proto.RegisterType((*RecognizeRequest)(nil), "main.RecognizeRequest")
	proto.RegisterType((*RecognizeResponse)(nil), "main.RecognizeResponse")
}

func init() {
	proto.RegisterFile("cvservice.proto", fileDescriptor_2c056965df545451)
}

var fileDescriptor_2c056965df545451 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2e, 0x2b, 0x4e,
	0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc,
	0xcc, 0x53, 0xb2, 0xe0, 0xe2, 0x71, 0xcb, 0xcc, 0x49, 0xf5, 0xc9, 0x4f, 0x4e, 0x2c, 0xc9, 0xcc,
	0xcf, 0x13, 0x12, 0xe3, 0x62, 0x4b, 0x2a, 0x4d, 0xce, 0x4e, 0x2d, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0xf2, 0x84, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0x25, 0x98, 0xc0, 0x82, 0x20,
	0xa6, 0x92, 0x15, 0x97, 0x40, 0x50, 0x6a, 0x72, 0x7e, 0x7a, 0x5e, 0x66, 0x55, 0x6a, 0x50, 0x6a,
	0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x1a, 0x17, 0x4b, 0x5a, 0x66, 0x4e, 0x2a, 0x58, 0x2f, 0xb7,
	0x91, 0x90, 0x1e, 0xc8, 0x0a, 0x3d, 0x64, 0xf3, 0x83, 0xc0, 0xf2, 0x4a, 0xbe, 0x5c, 0x82, 0x48,
	0x7a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0xa0, 0xd6, 0x32,
	0x65, 0xa6, 0x08, 0x69, 0x70, 0xb1, 0x82, 0x14, 0x17, 0x4b, 0x30, 0x29, 0x30, 0xe3, 0x30, 0x0d,
	0xa2, 0xc0, 0xc8, 0x9b, 0x8b, 0xd3, 0x39, 0x2c, 0x18, 0xe2, 0x3b, 0x21, 0x3b, 0x2e, 0x4e, 0xb8,
	0xd9, 0x42, 0x62, 0x10, 0x4d, 0xe8, 0x0e, 0x95, 0x12, 0xc7, 0x10, 0x87, 0x38, 0x42, 0x89, 0x21,
	0x89, 0x0d, 0x1c, 0x3c, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98, 0x57, 0x48, 0x63, 0x31,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CVServiceClient is the client API for CVService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CVServiceClient interface {
	Recognize(ctx context.Context, in *RecognizeRequest, opts ...grpc.CallOption) (*RecognizeResponse, error)
}

type cVServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCVServiceClient(cc grpc.ClientConnInterface) CVServiceClient {
	return &cVServiceClient{cc}
}

func (c *cVServiceClient) Recognize(ctx context.Context, in *RecognizeRequest, opts ...grpc.CallOption) (*RecognizeResponse, error) {
	out := new(RecognizeResponse)
	err := c.cc.Invoke(ctx, "/main.CVService/Recognize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CVServiceServer is the server API for CVService service.
type CVServiceServer interface {
	Recognize(context.Context, *RecognizeRequest) (*RecognizeResponse, error)
}

// UnimplementedCVServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCVServiceServer struct {
}

func (*UnimplementedCVServiceServer) Recognize(ctx context.Context, req *RecognizeRequest) (*RecognizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Recognize not implemented")
}

func RegisterCVServiceServer(s *grpc.Server, srv CVServiceServer) {
	s.RegisterService(&_CVService_serviceDesc, srv)
}

func _CVService_Recognize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecognizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CVServiceServer).Recognize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.CVService/Recognize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CVServiceServer).Recognize(ctx, req.(*RecognizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CVService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.CVService",
	HandlerType: (*CVServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Recognize",
			Handler:    _CVService_Recognize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cvservice.proto",
}
